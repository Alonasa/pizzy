<!--User page contain user info and orders-->

<!--Borrowed part of mockup from: https://bbbootstrap.com/snippets/bootstrap-5-myprofile-90806631-->
<div class="container mt-3">
    <div class="row text-warning p-1 m-1 align-items-center">
        <div class="col-md-3 border-right">
            <div class="d-flex flex-column align-items-center text-center p-3 py-5">
                <img class="rounded-circle mt-5" width="150px" height="150px"
                     src="/img/user-icon.png" alt="User icon">
                <span class="font-weight-bold"><%= username %></span>
                <span><%= email %></span>
                <span><%= address %></span>
                <button id="updateDetailsBtn" class="btn btn-warning">Update Details</button>
            </div>
        </div>
        <div class="col-md-5 border-right">
            <div class="py-3 p-md-3 py-md-5">
                <div class="column justify-content-between align-items-center mb-3">
                    <h4 class="text-right text-warning">Profile Information</h4>
                    <div>
                        <div>
                            <h5><b>Summary</b></h5>
                        </div>
                        <div class="col">
                            <div class="row justify-content-between text-uppercase flex-nowrap border-bottom">
                                Items: <span class="text-end col-5"><%= ordersTotal %></span>
                            </div>
                            <div class="row justify-content-between text-uppercase flex-nowrap border-bottom">Total Amount: <span class="text-end col-5">€ <%= ordersTotalAmt %></span></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <%- include("chunks/user-orders", {currentPage}) %>
    </div>
</div>

<!-- Modal for updating user details -->
<div class="modal fade" id="updateDetailsModal" tabindex="-1" aria-labelledby="updateDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content bg-dark text-warning">
            <div class="modal-header">
                <h5 class="modal-title" id="updateDetailsModalLabel">Update Your Details</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="updateUserForm">
                    <div class="mb-3">
                        <label for="fullName" class="form-label">Full Name:</label>
                        <input type="text" class="form-control" id="fullName" name="full_name" value="<%= username %>" required>
                    </div>

                    <div class="mb-3">
                        <label for="userAddress" class="form-label">Address:</label>
                        <input type="text" class="form-control" id="userAddress" name="address" value="<%= address %>" required>
                    </div>
                    <div class="mb-3">
                        <label for="userPhone" class="form-label">Phone:</label>
                        <input type="tel" class="form-control" id="userPhone" name="phone" placeholder="Enter your phone number">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-warning" id="saveUserDetails">Save changes</button>
            </div>
        </div>
    </div>
</div>

<% scripts = `
<script type="module">
    import showPopup from "./js/popup.js";
    const ordersButtons = document.querySelectorAll(".btn-order-detail");

    const renderElement = (result, el) => {
        const element = \`<div class="row justify-content-center align-items-end order-items mt-2 p-0">
                    \${result.data.map(item => \`<div class="order-content col-12 col-md-3 py-3 my-1 align-items-center">
                                <h3 class="h6">\${item.title}</h4>
                                <div class="col p-0">
                                    <img class="img-fluid cover-image" src="img/\${item.url}" alt="product image">
                                </div>
                                <div class="col p-0">
                                    <p class="row m-0">
                                        <span class="col p-0 text-start fw-bold">Size</span>
                                        <span class="col p-0 text-end">\${item.size.toUpperCase()}</span>
                                    </p>
                                    <p class="row m-0">
                                        <span class="col p-0 text-start fw-bold">Quantity</span>
                                        <span class="col p-0 text-end">\${item.quantity}</span>
                                    </p>
                                    <p class="row m-0">
                                        <span class="col p-0 text-start fw-bold">Price</span>
                                        <span class="col p-0 text-end">\${item.value} €</span>
                                    </p>
                                </div>
                            </div>
                            \`).join("")}
                </div>\`;
                return el.insertAdjacentHTML("afterend", element);
    };

    async function handleClick(url, el) {
            const orderId = url.split("/").pop();
            const currentOrder = localStorage.getItem("order_" + orderId);

            if (currentOrder){
                return renderElement(JSON.parse(currentOrder), el);
            } else {
                    const response = await fetch(url, {method: "GET"});
                    if (!response.ok) {
                        console.error("Fetch Error:", await response.text());
                        return;
                    } else {
                        const result = await response.json();
                        localStorage.setItem("order_" + orderId, JSON.stringify(result));
                        renderElement(result, el);
                     }
                }
    }


    ordersButtons.forEach(btn => {
        btn.addEventListener("click", async (event) => {
            event.preventDefault();
            const row = btn.closest(".row");
            const orderItems = row.querySelector(".order-items");

            if (btn.textContent === "Show less"){
                orderItems.parentNode.removeChild(orderItems);
                btn.textContent = "View details";
            } else {
                    const url = btn.getAttribute("href");
                    await handleClick(url, btn.parentElement);
                    btn.textContent = "Show less";
            }
        });
    });

    const saveUserDetailsBtn = document.getElementById("saveUserDetails");
    const updateUserForm = document.getElementById("updateUserForm");
    const updateDetailsModalEl = document.getElementById("updateDetailsModal");


    // Update user details functionality
    document.addEventListener("DOMContentLoaded", () => {
        const updateDetailsBtn = document.getElementById("updateDetailsBtn");
        const updateDetailsModal = new bootstrap.Modal(updateDetailsModalEl);

        updateDetailsBtn.addEventListener("click", () => {
            updateDetailsModal.show();
        });
    });

    // Handle form submission
    saveUserDetailsBtn.addEventListener("click", async () => {
        const formData = new FormData(updateUserForm);
        const userData = Object.fromEntries(formData);

        try {
            const response = await fetch("/user/update", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(userData)
            });

            if (response.ok) {
                const result = await response.json();
                showPopup(result.message || "Your details have been updated successfully!", "success");

                document.querySelector(".font-weight-bold").textContent = userData.full_name;
                document.querySelectorAll(".d-flex.flex-column span")[1].textContent = userData.email;
                document.querySelectorAll(".d-flex.flex-column span")[2].textContent = userData.address;
            } else {
                const error = await response.json();
                showPopup(error.message || "An error occurred while updating your details.", "error");
            }
        } catch (error) {
            console.error("Error updating user details:", error);
            showPopup("An error occurred while updating your details.", "error");
          }
    });
</script>
` %>
